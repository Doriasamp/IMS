@using System.ComponentModel.DataAnnotations


@code
{
    [SupplyParameterFromForm]
    [MaxLength(length: 64)]
    private string? searchFilter { get; set; } = string.Empty;

    // This is the event that will be raised when the search button is clicked
    [Parameter]
    public EventCallback<string> OnSearch { get; set; }


    // This method is called when the search button is clicked
    private void Search()
    {
        OnSearch.InvokeAsync(searchFilter);
    }

    protected override async Task OnInitializedAsync()
    {
        searchFilter ??= searchFilter = string.Empty;
        await Task.CompletedTask;
    }


}



<EditForm Enhance="true" Model="searchFilter" FormName="formSearch" OnSubmit="Search">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="input-group">
        <InputText id="name" @bind-Value="this.searchFilter" class="form-control" placeholder="Type to search"></InputText>
        <button type="submit" class="btn-success input-group-text">Search</button>
    </div>
    <br />
</EditForm>


