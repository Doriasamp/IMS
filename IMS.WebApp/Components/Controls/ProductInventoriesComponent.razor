
@code {

    [Parameter]
    public Product? Product { get; set; }

    private void RemoveInventory(ProductInventory prodInventory)
    {
        this.Product?.RemoveInventory(prodInventory);
    }

    private void HandleInventoriesSelected(Inventory inventory)
    {
        if (Product is not null)
        {
            Product.AddInventory(inventory);
        }
    }
}

<div class="card">
    <div class="card-body">
        @if (Product is not null && Product.ProductInventories.Count > 0)
        {
            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var prodInv in Product.ProductInventories)
                {
                    <tr>
                        <td>
                            @(prodInv?.Inventory?.InventoryName)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="number" min="0" @bind-value="@prodInv!.InventoryQuantity"/>
                        </td>
                        <td>
                            <button type="button"
                                    class="btn btn-link"
                                    @onclick="() => RemoveInventory(prodInv)">
                                Remove
                            </button>
                        </td>
                    </tr>
                }
                </tbody>

            </table>
        }
    </div>
</div>

<SearchInventoriesForProduct OnInventorySelected="HandleInventoriesSelected" />

