
@inject IViewProductsByNameUseCase ViewProductsByName


@code
{
    private List<Product>? products;

    [Parameter]
    public string? SearchProductFilter { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        products = (await ViewProductsByName.ExecuteAsync(SearchProductFilter??string.Empty)).ToList();
    }
}



<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Quantity</th>
        <th>Price</th>
        <th></th>
        <th style="text-align: left"></th>
    </tr>
    </thead>
    <tbody>
    @if (products is not null && products.Count > 0)
    {
        foreach (var prodItem in products)
        {
            <ProductListItemComponent @rendermode="InteractiveServer" Item="@prodItem"></ProductListItemComponent>
        }
    }
    </tbody>
</table>
